diff -burN muparser_v3_0_5.orig/CMakeLists.txt muparser_v3_0_5/CMakeLists.txt
--- muparser_v3_0_5.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ muparser_v3_0_5/CMakeLists.txt	2015-04-24 11:08:08.399400737 +0200
@@ -0,0 +1,61 @@
+# Parts of the code have been developed by CS during internships and self-financed
+# studies.
+
+# Copyright (c) CS Systemes d'Information
+
+# This code has been contributed to the ORFEO Toolbox (OTB) under
+# the CeCILL licence version 2. See Licence_CeCILL_V2-en.txt or
+# http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt for more
+# details.
+
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR
+# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+cmake_minimum_required(VERSION 2.8.3)
+
+project(muparserx)
+
+# Set a default build type if none was specified
+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+  message(STATUS "Setting build type to 'Release' as none was specified.")
+  set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build." FORCE)
+  # Set the possible values of build type for cmake-gui
+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
+endif()
+
+set(BUILD_SHARED_LIBS ON)
+if(MSVC)
+set(BUILD_SHARED_LIBS OFF) #force off
+endif()
+
+file(GLOB MUPARSERX_SRCS "parser/*.cpp" )
+file(GLOB MUPARSERX_HEADERS "parser/*.h")
+# avoid noxious mpCompat.h
+list(REMOVE_ITEM MUPARSERX_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/parser/mpCompat.h")
+
+
+add_library(muparserx ${MUPARSERX_SRCS})
+
+option(BUILD_SAMPLES "Build sample executable" ON)
+include_directories(parser)
+add_executable(muparserx-sample sample/timer.cpp sample/example.cpp)
+target_link_libraries(muparserx-sample muparserx)
+
+install(TARGETS muparserx
+  RUNTIME DESTINATION bin COMPONENT RuntimeLibraries
+  LIBRARY DESTINATION lib${LIB_SUFFIX} COMPONENT RuntimeLibraries
+  ARCHIVE DESTINATION lib COMPONENT Development)
+
+install(FILES ${MUPARSERX_HEADERS}
+  DESTINATION include
+  COMPONENT Development)
+
