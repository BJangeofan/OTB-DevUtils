SET (CTEST_SOURCE_DIRECTORY "$ENV{WORKSPACE}/src/OTB-Wrapping")
SET (CTEST_BINARY_DIRECTORY "$ENV{WORKSPACE}/binaries/release/OTB-Wrapping")

SET (CTEST_CMAKE_GENERATOR  "Unix Makefiles" )
SET (CTEST_CMAKE_COMMAND "cmake" )
SET (CTEST_BUILD_COMMAND "/usr/bin/make -j4  -i -k install" )
SET (CTEST_SITE "pc-jmalik.c-s.fr")
SET (CTEST_BUILD_NAME "Ubuntu9.10-32bits-Release")
SET (CTEST_BUILD_CONFIGURATION "Release")
SET (CTEST_HG_COMMAND "/usr/bin/hg")
SET (CTEST_HG_UPDATE_OPTIONS "-C")

SET (OTB_GDAL_INSTALL_DIR "$ENV{WORKSPACE}/utils/gdal-1.7.2")
SET (ENV{DISPLAY} ":0.0")

SET (CTEST_INITIAL_CACHE "
BUILDNAME:STRING=${CTEST_BUILD_NAME}
SITE:STRING=${CTEST_SITE}

OTB_DATA_USE_LARGEINPUT:BOOL=ON
OTB_DATA_LARGEINPUT_ROOT:STRING=/home/jmalik/Projets/otb/src/OTB-LargeInput
OTB_DATA_ROOT:STRING=$ENV{WORKSPACE}/src/OTB-Data

CMAKE_C_FLAGS:STRING= -Wall -Wno-uninitialized -Wno-unused-variable
CMAKE_CXX_FLAGS:STRING= -Wall -Wno-deprecated -Wno-uninitialized -Wno-unused-variable

CMAKE_BUILD_TYPE:STRING=Release

OTB_DIR:STRING=$ENV{WORKSPACE}/binaries/release/OTB
BUILD_TESTING:BOOL=ON

CMAKE_INSTALL_PREFIX:STRING=$ENV{WORKSPACE}/install/OTB-Wrapping

GDALCONFIG_EXECUTABLE:FILEPATH=${OTB_GDAL_INSTALL_DIR}/bin/gdal-config
GDAL_CONFIG:FILEPATH=${OTB_GDAL_INSTALL_DIR}/bin/gdal-config
GDAL_INCLUDE_DIR:STRING=${OTB_GDAL_INSTALL_DIR}/include
GDAL_LIBRARY:FILEPATH=${OTB_GDAL_INSTALL_DIR}/lib/libgdal.so
OGR_INCLUDE_DIRS:PATH=${OTB_GDAL_INSTALL_DIR}/include
GEOTIFF_INCLUDE_DIRS:PATH=${OTB_GDAL_INSTALL_DIR}/include
TIFF_INCLUDE_DIRS:PATH=${OTB_GDAL_INSTALL_DIR}/include
JPEG_INCLUDE_DIRS:PATH=${OTB_GDAL_INSTALL_DIR}/include
JPEG_INCLUDE_DIR:PATH=${OTB_GDAL_INSTALL_DIR}/include

SWIG_DIR:PATH=$ENV{WORKSPACE}/utils/swig-1.3.40/share/swig/1.3.40
SWIG_EXECUTABLE:FILEPATH=$ENV{WORKSPACE}/utils/swig-1.3.40/bin/swig
CableSwig_DIR:PATH=$ENV{WORKSPACE}/utils/cableswig-dev/lib/CableSwig
WRAP_ITK_PYTHON:BOOL=ON
WRAP_ITK_JAVA:BOOL=OFF

")


SET( PULL_RESULT_FILE "${CTEST_BINARY_DIRECTORY}/pull_result.txt" )

SET (CTEST_NOTES_FILES
${CTEST_SCRIPT_DIRECTORY}/${CTEST_SCRIPT_NAME}
${PULL_RESULT_FILE}
${CTEST_BINARY_DIRECTORY}/CMakeCache.txt
)

ctest_empty_binary_directory (${CTEST_BINARY_DIRECTORY})

execute_process( COMMAND ${CTEST_HG_COMMAND} pull http://hg.orfeo-toolbox.org/${PROJECT_NAME}
                 WORKING_DIRECTORY "${CTEST_SOURCE_DIRECTORY}"
                 OUTPUT_VARIABLE   PULL_RESULT
                 ERROR_VARIABLE    PULL_RESULT )
file(WRITE ${PULL_RESULT_FILE} ${PULL_RESULT} )

ctest_start(Nightly)
ctest_update(SOURCE "${CTEST_SOURCE_DIRECTORY}")
file(WRITE "${CTEST_BINARY_DIRECTORY}/CMakeCache.txt" ${CTEST_INITIAL_CACHE})
ctest_configure (BUILD "${CTEST_BINARY_DIRECTORY}")
ctest_build (BUILD "${CTEST_BINARY_DIRECTORY}")
ctest_test (BUILD "${CTEST_BINARY_DIRECTORY}" PARALLEL_LEVEL 2)
ctest_submit ()

